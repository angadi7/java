3

import { Route } from '@angular/router';
import { TaskListComponent } from './task-list/task-list.component';
import { AddTaskComponent } from './add-task/add-task.component';

export const routes: Route[] = [
  { path: 'tasks', component: TaskListComponent },
  { path: 'add-task', component: AddTaskComponent },
  { path: '', redirectTo: '/tasks', pathMatch: 'full' }
];


4

import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { RouterModule } from '@angular/router';
import { AppComponent } from './app.component';
import { TaskListComponent } from './task-list/task-list.component';
import { AddTaskComponent } from './add-task/add-task.component';
import { FormsModule } from '@angular/forms';
import { routes } from './app.routes';

@NgModule({
  declarations: [
    AppComponent,
    TaskListComponent,
    AddTaskComponent
  ],
  imports: [
    BrowserModule,
    RouterModule.forRoot(routes),
    FormsModule
  ],
  providers: [],
  bootstrap: [AppComponent]
})
export class AppModule { }


5

import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-task-list',
  templateUrl: './task-list.component.html',
  styleUrls: ['./task-list.component.css']
})
export class TaskListComponent implements OnInit {
  tasks: string[] = [];

  constructor() { }

  ngOnInit(): void {
    this.loadTasks();
  }

  loadTasks() {
    const tasks = localStorage.getItem('tasks');
    if (tasks) {
      this.tasks = JSON.parse(tasks);
    }
  }
}


<h2>Task List</h2>
<ul>
  <li *ngFor="let task of tasks">{{ task }}</li>
</ul>
<a routerLink="/add-task">Add Task</a>


6

import { Component } from '@angular/core';
import { Router } from '@angular/router';

@Component({
  selector: 'app-add-task',
  templateUrl: './add-task.component.html',
  styleUrls: ['./add-task.component.css']
})
export class AddTaskComponent {
  task: string = '';

  constructor(private router: Router) { }

  addTask() {
    if (this.task) {
      let tasks = localStorage.getItem('tasks');
      let tasksArray = tasks ? JSON.parse(tasks) : [];
      tasksArray.push(this.task);
      localStorage.setItem('tasks', JSON.stringify(tasksArray));
      this.router.navigate(['/tasks']);
    }
  }
}



<h2>Add Task</h2>
<form (ngSubmit)="addTask()">
  <label for="task">Task</label>
  <input type="text" id="task" [(ngModel)]="task" name="task" required>
  <button type="submit">Add</button>
</form>
<a routerLink="/tasks">Back to Task List</a>




7



<nav>
  <a routerLink="/tasks">Task List</a>
  <a routerLink="/add-task">Add Task</a>
</nav>
<router-outlet></router-outlet>


